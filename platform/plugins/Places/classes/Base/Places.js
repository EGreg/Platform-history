/**
 * Autogenerated base class for the Places model.
 * 
 * Don't change this file, since it can be overwritten.
 * Instead, change the Places.js file.
 *
 * @module Places
 */
var Q = require('Q');
var Db = Q.require('Db');

/**
 * Base class for the Places model
 * @namespace Base
 * @class Places
 * @static
 */
function Base () {
	return this;
}
 
module.exports = Base;

/**
 * The list of model classes
 * @property tableClasses
 * @type array
 */
Base.tableClasses = [
	"Places_Autocomplete",
	"Places_Domain",
	"Places_HostnameSession",
	"Places_Publisher",
	"Places_Session",
	"Places_Share",
	"Places_Visit",
	"Places_Zipcode"
];

/**
 * This method calls Db.connect() using information stored in the configuration.
 * If this has already been called, then the same db object is returned.
 * @method db
 * @return {Db} The database connection
 */
Base.db = function () {
	return Db.connect('Places');
};

/**
 * The connection name for the class
 * @method connectionName
 * @return {string} The name of the connection
 */
Base.connectionName = function() {
	return 'Places';
};

/**
 * Link to Places.Autocomplete model
 * @property Autocomplete
 * @type Places.Autocomplete
 */
Base.Autocomplete = Q.require('Places/Autocomplete');

/**
 * Link to Places.Domain model
 * @property Domain
 * @type Places.Domain
 */
Base.Domain = Q.require('Places/Domain');

/**
 * Link to Places.HostnameSession model
 * @property HostnameSession
 * @type Places.HostnameSession
 */
Base.HostnameSession = Q.require('Places/HostnameSession');

/**
 * Link to Places.Publisher model
 * @property Publisher
 * @type Places.Publisher
 */
Base.Publisher = Q.require('Places/Publisher');

/**
 * Link to Places.Session model
 * @property Session
 * @type Places.Session
 */
Base.Session = Q.require('Places/Session');

/**
 * Link to Places.Share model
 * @property Share
 * @type Places.Share
 */
Base.Share = Q.require('Places/Share');

/**
 * Link to Places.Visit model
 * @property Visit
 * @type Places.Visit
 */
Base.Visit = Q.require('Places/Visit');

/**
 * Link to Places.Zipcode model
 * @property Zipcode
 * @type Places.Zipcode
 */
Base.Zipcode = Q.require('Places/Zipcode');
